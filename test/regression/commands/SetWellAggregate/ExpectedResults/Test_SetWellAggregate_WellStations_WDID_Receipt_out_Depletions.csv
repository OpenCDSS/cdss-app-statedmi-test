#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 5.00.06.dev (2021-01-05)
# user:         sam
# date:         Sun Jan 17 03:00:54 America/Denver 2021
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\StateDMI\git-repos\cdss-app-statedmi-test\test\regression\commands\SetWellAggregate
# command line: StateDMI
#  -home test\operational\CDSS
#----
# 
# StateMod well depletion file.
# See also the associated well station and return files.
# 
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\StateDMI\git-repos\cdss-app-statedmi-test\test\regression\commands\SetWellAggregate\Test_SetWellAggregate_WellStations_WDID_Receipt.StateDMI"
# Commands: 
# # Test setting well aggregate information for well stations
# # - set for CU Location and StateMod well station
# # - set using WDID and Receipt
# # - use actual Receipt so that well WD can be looked up and avoid warning
# StartLog(LogFile="Results/Test_SetWellAggregate_WellStations_WDID_Receipt.StateDMI.log")
# RemoveFile(InputFile="Results\Test_SetWellAggregate_WellStations_WDID_Receipt_out_Collections.csv",IfNotFound=Ignore)
# SetCULocation(ID="Well1",Name="Well 1",IfNotFound=Add)
# SetCULocation(ID="Well2",Name="Well 2",IfNotFound=Add)
# SetCULocation(ID="Well3",Name="Well 3",IfNotFound=Add)
# SetWellStation(ID="Well1",Name="Well 1",IfNotFound=Add)
# SetWellStation(ID="Well2",Name="Well 2",IfNotFound=Add)
# SetWellStation(ID="Well3",Name="Well 3",IfNotFound=Add)
# SetWellAggregate(ID="Well1",PartType=Well,PartIDs="1234567,2345678,p:9101448")
# SetWellAggregate(ID="Well2",PartType=Well,PartIDs="p:0001629,3456789,4567890")
# SetWellAggregate(ID="Well3",PartType=Well,PartIDs="1122334,p:0001630,p:0002169,2233445,3344556")
# # Uncomment the following 2 commands to regenerate the expected results.
# WriteCULocationsToList(OutputFile="ExpectedResults/Test_SetWellAggregate_WellStations_WDID_Receipt_outcu.csv")
# WriteWellStationsToList(OutputFile="ExpectedResults/Test_SetWellAggregate_WellStations_WDID_Receipt_out.csv")
# WriteCULocationsToList(OutputFile="Results/Test_SetWellAggregate_WellStations_WDID_Receipt_outcu.csv")
# WriteWellStationsToList(OutputFile="Results/Test_SetWellAggregate_WellStations_WDID_Receipt_out.csv")
# CompareFiles(InputFile1="ExpectedResults/Test_SetWellAggregate_WellStations_WDID_Receipt_outcu_Collections.csv",InputFile2="Results/Test_SetWellAggregate_WellStations_WDID_Receipt_outcu_Collections.csv",IfDifferent=Warn)
# CompareFiles(InputFile1="ExpectedResults/Test_SetWellAggregate_WellStations_WDID_Receipt_out_Collections.csv",InputFile2="Results/Test_SetWellAggregate_WellStations_WDID_Receipt_out_Collections.csv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on RoaringFork
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
"WELL ID","RIVER NODE BEING DEPLETED","PERCENT","DELAY TABLE ID","COMMENT"
