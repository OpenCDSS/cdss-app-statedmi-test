#HeaderRevision 0
#
# File generated by...
# program:      StateDMI 5.00.00dev (2019-06-26)
# user:         sam
# date:         Thu Jul 04 01:29:50 America/Denver 2019
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\StateDMI\git-repos\cdss-app-statedmi-test\test\regression\commands\FillCULocationClimateStationWeights
# command line: StateDMI
#  -home test\operational\CDSS
#----
# 
# StateCU location collection information as delimited list file.
# See also the associated location and climate station assignment files.
# Division and year are only used with well parcel aggregates/systems.
# ParcelIdType are only used with well aggregates/systems where the part ID is Well.
# 
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\StateDMI\git-repos\cdss-app-statedmi-test\test\regression\commands\FillCULocationClimateStationWeights\Test_FillCULocationClimateStationWeights.StateDMI"
# Commands: 
# # Test filling CU location station weights (involves other commands also)
# # with a couple of generated stations
# StartLog(LogFile="Results/Test_FillCULocationClimateStationWeights.StateDMI.log")
# RemoveFile(InputFile="Results\Test_FillCULocationClimateStationWeights_out.csv")
# RemoveFile(InputFile="Results\Test_FillCULocationClimateStationWeights_out_ClimateStations.csv")
# RemoveFile(InputFile="Results\Test_FillCULocationClimateStationWeights_out_Collections.csv")
# SetCULocation(ID="2000505",Name="Test 1",Latitude=44.01,Elevation=5001,Region1="Test County 1",Region2="Test HUC 1",AWC=.51,IfNotFound=Add)
# SetCULocation(ID="2000623",Name="Test 2",Latitude=44.02,Elevation=5002,Region1="Test County 2",Region2="Test HUC 2",AWC=.52,IfNotFound=Add)
# SetCULocation(ID="2000812",Name="Test 3",Latitude=44.03,Elevation=5003,Region1="Test County 3",Region2="Test HUC 3",AWC=.53,IfNotFound=Add)
# SetClimateStation(ID="station1",Name="Station 1",Latitude=44.01,Elevation=5501,Region1="County1",IfNotFound=Add)
# FillCULocationClimateStationWeights(ID="*",IncludeOrographicTempAdj=True,IncludeOrographicPrecAdj=True,Weights="station1,.2,.3,.11,.12;station2,.8,.7,.21,.22")
# # Uncomment the following command to regenerate the expected results.
# WriteCULocationsToList(OutputFile="ExpectedResults/Test_FillCULocationClimateStationWeights_out.csv")
# WriteCULocationsToList(OutputFile="Results/Test_FillCULocationClimateStationWeights_out.csv")
# CompareFiles(InputFile1="ExpectedResults/Test_FillCULocationClimateStationWeights_out.csv",InputFile2="Results/Test_FillCULocationClimateStationWeights_out.csv",IfDifferent=Warn)
# CompareFiles(InputFile1="ExpectedResults/Test_FillCULocationClimateStationWeights_out_ClimateStations.csv",InputFile2="Results/Test_FillCULocationClimateStationWeights_out_ClimateStations.csv",IfDifferent=Warn)
# CompareFiles(InputFile1="ExpectedResults/Test_FillCULocationClimateStationWeights_out_Collections.csv",InputFile2="Results/Test_FillCULocationClimateStationWeights_out_Collections.csv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on RoaringFork
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#------------------------------------------------
"CU LOCATION ID","DIVISION","YEAR","COLLECTION TYPE","PART TYPE","PART ID","PART ID TYPE"
