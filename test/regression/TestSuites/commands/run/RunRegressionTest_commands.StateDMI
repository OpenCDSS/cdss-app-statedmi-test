# File generated by...
# program:      StateDMI 5.00.06.dev (2021-01-18)
# user:         sam
# date:         Wed Jan 20 10:05:38 America/Denver 2021
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\StateDMI\git-repos\cdss-app-statedmi-test\test\regression\TestSuites\commands\create
# command line: StateDMI
#  -home test\operational\CDSS
#
# The following 633 test cases will be run to compare results with expected results.
# Individual log files are generally created for each test.
# The following test suites from @testSuite comments are included: *
# Test cases for @os comments are included: *
StartRegressionTestResultsReport(OutputFile="RunRegressionTest_commands.statedmi.out.txt")
RunCommands(InputFile="..\..\..\commands\AggregateWellRights\Test_AggregateWellRights_rg2007part.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\AppendNetwork\Test_AppendNetwork_AppendHow=ReplaceUpstreamOfDownstream.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\AppendTable\Test_AppendTable_ColumnsMatch.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\AppendTable\Test_AppendTable_ColumnsMatch_ColumnFilters.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\AppendTable\Test_AppendTable_IncludeColumns.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\AppendTable\Test_AppendTable_IncludeColumns_ColumnMap.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\AppendTable\Test_AppendTable_IncludeColumns_ColumnMap_ColumnFilters.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\AppendTable\Test_AppendTable_IncludeColumns_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateDiversionDemandTSMonthly\Test_CalculateDiversionDemandTSMonthly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateDiversionDemandTSMonthlyAsMax\Test_CalculateDiversionDemandTSMonthlyAsMax.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateDiversionStationEfficiencies\Test_CalculateDiversionStationEfficiencies.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateStreamEstimateCoefficients\Test_CalculateStreamEstimateCoefficents_cm2005.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateStreamEstimateCoefficients\Test_CalculateStreamEstimateCoefficients_gm2004.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateStreamEstimateCoefficients\Test_CalculateStreamEstimateCoefficients_rg2007.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateStreamEstimateCoefficients\Test_CalculateStreamEstimateCoefficients_rg2007b.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateStreamEstimateCoefficients\Test_CalculateStreamEstimateCoefficients_sj2004.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateStreamEstimateCoefficients\Test_CalculateStreamEstimateCoefficients_wm2006.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateStreamEstimateCoefficients\Test_CalculateStreamEstimateCoefficients_ym2004.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateWellDemandTSMonthly\Test_CalculateWellDemandTSMonthly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateWellDemandTSMonthlyAsMax\Test_CalculateWellDemandTSMonthlyAsMax.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CalculateWellStationEfficiencies\Test_CalculateWellStationEfficiencies.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckBlaneyCriddle\Test_CheckBlaneyCriddle.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckClimateStations\Test_CheckClimateStations.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckCropCoefficients\Test_CheckCropCharacteristics.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckCropPatternTS\Test_CropPatternTS.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckCULocations\Test_CheckCULocations.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckDiversionDemandTSMonthly\Test_CheckDiversionDemandTSMonthly.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckDiversionHistoricalTSMonthly\Test_CheckDiversionHistoricalTSMonthly.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckDiversionRights\Test_CheckDiversionRights.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckDiversionStations\Test_CheckDiversionStations.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckInstreamFlowDemandTSAverageMonthly\Test_CheckInstreamFlowDemandTSAverageMonthly.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckInstreamFlowRights\Test_CheckInstreamFlowRights.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckInstreamFlowStations\Test_CheckInstreamFlowStations.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckIrrigationPracticeTS\Test_IrrigationPracticeTS.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckPenmanMonteith\Test_PenmanMonteith.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckReservoirRights\Test_CheckReservoirRights.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckReservoirStations\Test_CheckReservoirStations.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckRiverNetwork\Test_CheckRiverNetwork.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckStreamEstimateCoefficients\Test_CheckStreamEstimateCoefficients.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckStreamEstimateStations\Test_CheckStreamEstimateStations.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckStreamGageStations\Test_CheckStreamGageStations.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckWellDemandTSMonthly\Test_CheckWellDemandTSMonthly.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckWellHistoricalPumpingTSMonthly\Test_CheckWellHistoricalTSMonthly.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckWellRights\Test_CheckWellRights.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CheckWellStations\Test_CheckWellStations.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CloseExcelWorkbook\Test_CloseExcelWorkbook.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\Comment\test-Comment-require-app-version-fail.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\Comment\Test_Comment.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CommentBlock\Test_CommentBlock.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareFiles\Test_CompareFiles_DifferentFiles_WarnIfDifferent=False.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareFiles\Test_CompareFiles_DifferentFiles_WarnIfDifferent=True.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareFiles\Test_CompareFiles_SameFiles_WarnIfSame=False.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareFiles\Test_CompareFiles_SameFiles_WarnIfSame=True.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareTables\Test_CompareTables_DifferentTables_IfDifferent=Ignore.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareTables\Test_CompareTables_DifferentTables_IfDifferent=Warn.statedmi",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareTables\Test_CompareTables_DifferentTables_Precision_IfDifferent=Warn.statedmi",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareTables\Test_CompareTables_DifferentTables_Precision_Tolerance_AllowedDiff_NoWarn.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareTables\Test_CompareTables_DifferentTables_Precision_Tolerance_IfDifferent=Warn.statedmi",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareTables\Test_CompareTables_SameTables_IfSame=Ignore.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CompareTables\Test_CompareTables_SameTables_IfSame=Warn.statedmi",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_DistinctColumns_DateTime.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_DistinctColumns_Double.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_DistinctColumns_Integer.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_DistinctColumns_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_DistinctColumns_String.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_DistinctColumns_StringAndInteger.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_DistinctColumns_String_AllOutput.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_DistinctColumns_String_RowCountProperty.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_HeadersOnly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_IncludeColumns.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_IncludeColumns2.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_IncludeColumns_ColumnFilters.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_IncludeColumns_ColumnMap.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_IncludeColumns_DistinctColumns.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_IncludeColumns_ExcludeColumnFilters.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_IncludeColumns_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CopyTable\Test_CopyTable_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CreateCropPatternTSForCULocations\Test_CreateCropPatternTSForCULocations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CreateIrrigationPracticeTSForCULocations\Test_CreateIrrigationPracticeTSForCULocations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CreateNetworkFromRiverNetwork\Test_CreateNetworkFromRiverNetwork_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\CreateRiverNetworkFromNetwork\Test_CreateRiverNetworkFromNetwork_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\DeleteTableColumns\Test_DeleteTableColumns.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\DeleteTableColumns\Test_DeleteTableColumns_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\DeleteTableRows\Test_DeleteTableRows_1_Last.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\DeleteTableRows\Test_DeleteTableRows_1_Last_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\Exit\Test_Exit.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillClimateStation\Test_FillClimateStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillClimateStation\Test_FillClimateStation_withheights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillClimateStationsFromHydroBase\Test_FillClimateStationsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillCropPatternTSConstant\Test_FillCropPatternTSConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillCropPatternTSInterpolate\Test_FillCropPatternTSInterpolate.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillCropPatternTSRepeat\Test_FillCropPatternTSRepeat.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillCropPatternTSUsingWellRights\Test_FillCropPatternTSUsingWellRights.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillCULocation\Test_FillCULocation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillCULocationClimateStationWeights\Test_FillCULocationClimateStationWeights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillCULocationsFromHydroBase\Test_FillCULocationsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillCULocationsFromList\Test_FillCULocationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionDemandTSMonthlyAverage\Test_FillDiversionDemandTSMonthlyAverage.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionDemandTSMonthlyConstant\Test_FillDiversionDemandTSMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionDemandTSMonthlyPattern\Test_FillDiversionDemandTSMonthlyPattern.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionHistoricalTSMonthlyAverage\Test_FillDiversionHistoricalTSMonthlyAverage.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionHistoricalTSMonthlyConstant\Test_FillDiversionHistoricalTSMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionHistoricalTSMonthlyPattern\Test_FillDiversionHistoricalTSMonthlyPattern.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionRight\Test_FillDiversionRight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionStation\Test_FillDiversionStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionStationsFromHydroBase\Test_FillDiversionStationsFromHydroBase_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionStationsFromHydroBase\Test_FillDiversionStationsFromHydroBase_le20180529.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillDiversionStationsFromNetwork\Test_FillDiversionStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillInstreamFlowRight\Test_FillInstreamFlowRight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillInstreamFlowStation\Test_FillInstreamFlowStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillInstreamFlowStationsFromHydroBase\Test_FillInstreamFlowStationsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillInstreamFlowStationsFromNetwork\Test_FillStreamGageStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillIrrigationPracticeTSAcreageUsingWellRights\Test_FillIrrigationPracticeTSTotalAcreageUsingWellRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillIrrigationPracticeTSInterpolate\Test_FillIrrigationPracticeTSInterpolate.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillIrrigationPracticeTSRepeat\Test_FillIrrigationPracticeTSRepeat.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillNetworkFromHydroBase\Test_FillNetworkFromHydroBase_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillReservoirRight\Test_FillReservoirRight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillReservoirStation\Test_FillReservoirStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillReservoirStationsFromHydroBase\Test_FillReservoirStationsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillReservoirStationsFromNetwork\Test_FillReservoirStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillRiverNetworkFromHydroBase\Test_FillRiverNetworkFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillRiverNetworkFromNetwork\Test_FillRiverNetworkFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillRiverNetworkNode\Test_FillRiverNetworkNode.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillStreamEstimateStation\Test_FillStreamEstimateStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillStreamEstimateStationsFromHydroBase\Test_FillStreamEstimateStationsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillStreamEstimateStationsFromNetwork\Test_FillStreamEstimateStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillStreamGageStation\Test_FillStreamGageStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillStreamGageStationsFromHydroBase\Test_FillStreamGageStationsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillStreamGageStationsFromNetwork\Test_FillStreamGageStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellDemandTSMonthlyAverage\Test_FillWellDemandTSMonthlyAverage.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellDemandTSMonthlyConstant\Test_FillWellDemandTSMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellDemandTSMonthlyPattern\Test_FillWellDemandTSMonthlyPattern.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellHistoricalPumpingTSMonthlyAverage\Test_FillWellHistoricalPumpingTSMonthlyAverage.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellHistoricalPumpingTSMonthlyConstant\Test_FillWellHistoricalPumpingTSMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellHistoricalPumpingTSMonthlyPattern\Test_FillWellHistoricalPumpingTSMonthlyPattern.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellRight\Test_FillWellRight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellStation\Test_FillWellStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellStationsFromDiversionStations\Test_FillWellStationsFromDiversionStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FillWellStationsFromNetwork\Test_FillWellStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatDateTimeProperty\Test_FormatDateTimeProperty_PropertyType.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatDateTimeProperty\Test_FormatDateTimeProperty_Strftime.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatStringProperty\Test_FormatStringProperty.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatStringProperty\Test_FormatStringProperty_Newline.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatStringProperty\Test_FormatStringProperty_PropertyType.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableDateTime\Test_FormatTableDateTime_1970seconds.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableDateTime\Test_FormatTableDateTime_Increment_Hour.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableDateTime\Test_FormatTableDateTime_Increment_Hour_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableDateTime\Test_FormatTableDateTime_InsertBeforeColumn.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableDateTime\Test_FormatTableDateTime_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableDateTime\Test_FormatTableDateTime_Year_Integer.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableString\Test_FormatTableString_DefaultWidth.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableString\Test_FormatTableString_InsertBeforeColumn.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableString\Test_FormatTableString_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableString\Test_FormatTableString_Widths.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FormatTableString\Test_FormatTableString_ZeroPad.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FreeTable\Test_FreeTable.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FreeTable\Test_FreeTable_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FTPGet\Test_FTPGet_SNOTEL.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\FTPGet\Test_FTPGet_SNOTEL_Property.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableColumn\Test_InsertTableColumn_HeadersOnly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableColumn\Test_InsertTableColumn_InitialFunction_Row.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableColumn\Test_InsertTableColumn_InitialFunction_Row0.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableColumn\Test_InsertTableColumn_InitialValue.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableColumn\Test_InsertTableColumn_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableRow\Test_InsertTableRow.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableRow\Test_InsertTableRow_ColumnValues.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableRow\Test_InsertTableRow_InsertCount.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableRow\Test_InsertTableRow_InsertRow.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\InsertTableRow\Test_InsertTableRow_InsertRow_ColumnValues.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\JoinTables\Test_JoinTables_MatchRows.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\JoinTables\Test_JoinTables_MatchRows_Filter.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\JoinTables\Test_JoinTables_MatchRows_Filter_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\JoinTables\Test_JoinTables_MultipleMatches_NumberColumns.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\JoinTables\Test_JoinTables_MultipleMatches_UseLastMatch.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\JoinTables\Test_JoinTables_PartialMatch.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\JoinTables\Test_JoinTables_PartialMatch2_JoinIfInBoth.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\LimitDiversionDemandTSMonthlyToRights\Test_LimitDiversionDemandTSMonthlyToRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\LimitDiversionHistoricalTSMonthlyToRights\Test_LimitDiversionHistoricalTSMonthlyToRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\LimitWellDemandTSMonthlyToRights\Test_LimitWellDemandTSMonthlyToRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\LimitWellHistoricalPumpingTSMonthlyToRights\Test_LimitWellHistoricalPumpingTSMonthlyToRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ListFiles\Test_ListFiles.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ListFiles\Test_ListFiles_Append.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ListFiles\Test_ListFiles_Filters.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Append.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Columns_Append.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Columns_Prepend.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Prepend.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Prepend_Filters.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Remove_Special.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Replace.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Replace2.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Replace_SameColumn.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Replace_Special.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Split.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_Substring.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_ToDate.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_ToDateTime.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_ToDouble.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ManipulateTableString\Test_ManipulateTableString_ToInteger.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\MergeListFileColumns\Test_MergeListFileColumns_1.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\MergeWellRights\Test_MergeWellRightsFromStateMod_rg2007part.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\Message\Test_Message.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\Message\Test_Message_Failure.StateDMI",ExpectedStatus=Failure,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\Message\Test_Message_Success.StateDMI",ExpectedStatus=Success,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\Message\Test_Message_Warning.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\Message\Test_Message_Warning_Property.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\NewExcelWorkbook\Test_NewExcelWorkbook_Definitions.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\NewExcelWorkbook\Test_NewExcelWorkbook_Definitions_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\NewTable\Test_NewTable_HeadersOnly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\NewTable\Test_NewTable_HeadersOnly_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\PrintNetwork\Test_PrintNetwork_cm2005_all_E_XPS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\PrintNetwork\Test_PrintNetwork_Sp2008L_all_D_XPS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadBlaneyCriddleFromHydroBase\Test_ReadBlaneyCriddleFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadBlaneyCriddleFromStateCU\Test_ReadBlaneyCriddleFromStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadClimateStationsFromList\Test_ReadClimateStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadClimateStationsFromList\Test_ReadClimateStationsFromList_Region2Failure.StateDMI",ExpectedStatus=Failure,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadClimateStationsFromStateCU\Test_ReadClimateStationsFromStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadClimateStationsFromStateCU\Test_ReadClimateStationsFromStateCU_withheight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadControlFromStateMod\Test_ReadControlFromStateMod_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCropCharacteristicsFromHydroBase\Test_ReadCropCharacteristicsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCropCharacteristicsFromStateCU\Test_ReadCropCharacteristicsFromStateCU_rg2007.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCropPatternTSFromHydroBase\Test_ReadCropPatternTSFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCropPatternTSFromHydroBase\Test_ReadCropPatternTSFromHydroBase_ArkExGwOnly.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCropPatternTSFromStateCU\Test_ReadCropPatternTSFromStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCropPatternTSFromStateCU\Test_ReadCropPatternTSFromStateCU_lt5.00.00.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCropPatternTSFromStateCU\Test_ReadCropPatternTSFromStateCU_Version=10.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCULocationsFromList\Test_ReadCULocationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCULocationsFromList\Test_ReadCULocationsFromList_Region2Failure.StateDMI",ExpectedStatus=Failure,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCULocationsFromList\Test_ReadCULocationsFromList_Top.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCULocationsFromStateCU\Test_ReadCULocationsFromStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadCULocationsFromStateMod\Test_ReadCULocationsFromStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDelayTablesDailyFromStateMod\Test_ReadDelayTablesDailyFromStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDelayTablesDailyFromStateMod\Test_ReadDelayTablesDailyFromStateMod_Legacy.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDelayTablesMonthlyFromStateMod\Test_ReadDelayTablesMonthlyFromStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDelayTablesMonthlyFromStateMod\Test_ReadDelayTablesMonthlyFromStateMod_Legacy.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionDemandTSMonthlyFromStateMod\Test_ReadDiversionDemandTSMonthlyFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_DivCommentsFalse_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_DivCommentsFalse_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_FillAverage_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_FillAverage_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_FillPattern_FillAverage_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_FillPattern_FillAverage_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_FillPattern_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_FillPattern_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_cm2006part_Agg_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_rg2007part_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromHydroBase\Test_ReadDiversionHistoricalTSMonthlyFromHydroBase_rg2007part_le20090701.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionHistoricalTSMonthlyFromStateMod\Test_ReadDiversionHistoricalTSMonthlyFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionRightsFromHydroBase\Test_ReadDiversionRightsFromHydroBase_rg2007part.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionRightsFromHydroBase\Test_ReadDiversionRightsFromHydroBase_rg2007part_Rest.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionRightsFromStateMod\Test_ReadDiversionRightsFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionStationsFromList\Test_ReadDiversionStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionStationsFromNetwork\Test_ReadDiversionStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadDiversionStationsFromStateMod\Test_ReadDiversionStationsFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadExcelWorkbook\Test_ReadExcelWorkbook.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadInstreamFlowDemandTSAverageMonthlyFromStateMod\Test_ReadInstreamFlowDemandTSAverageMonthlyFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadInstreamFlowRightsFromHydroBase\Test_ReadInstreamFlowRightsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadInstreamFlowRightsFromHydroBase\Test_ReadInstreamFlowRightsFromHydroBase_Rest.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadInstreamFlowRightsFromStateMod\Test_ReadInstreamFlowRightsFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadInstreamFlowStationsFromList\Test_ReadInstreamFlowStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadInstreamFlowStationsFromNetwork\Test_ReadInstreamFlowStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadInstreamFlowStationsFromStateMod\Test_ReadInstreamFlowStationsFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadIrrigationPracticeTSFromHydroBase\Test_ReadIrrigationPracticeTSFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadIrrigationPracticeTSFromHydroBase\Test_ReadIrrigationPracticeTSFromHydroBase_ArkExGwOnly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadIrrigationPracticeTSFromList\Test_ReadIrrigationPracticeTSFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadIrrigationPracticeTSFromStateCU\Test_ReadIrrigationPracticeTSFromStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadIrrigationPracticeTSFromStateCU\Test_ReadIrrigationPracticeTSFromStateCU_Version=10.StateDMI",ExpectedStatus=Fail,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadIrrigationWaterRequirementFromStateCU\Test_ReadIrrigationWaterRequirementTSMonthlyFromStateCU_cm2004.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadNetworkFromStateMod\Test_ReadNetworkFromNetwork_cm2005.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadNetworkFromStateMod\Test_ReadNetworkFromNetwork_cm2005_Legacy.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadOperationalRightsFromStateMod\Test_ReadOperationalRightsFromStateMod_AllVersion2.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadParcelsFromHydroBase\test-read-vw_cdss_parcelusets.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadParcelsFromHydroBase\Test_ReadParcelsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadPenmanMonteithFromHydroBase\Test_ReadPenmanMonteithFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadPenmanMonteithFromStateCU\Test_ReadPenmanMonteithFromStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadPlanReturnFromStateMod\Test_ReadPlanReturnFromStateMod_sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadPlanStationsFromStateMod\Test_ReadPlanStationsFromStateMod_sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadPlanWellAugmentationFromStateMod\Test_ReadPlanWellAugmentationFromStateMod_sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadPropertiesFromExcel\Test_ReadPropertiesFromExcel_SWSI2.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadReservoirReturnFromStateMod\Test_ReadReservoirReturnFromStateMod_sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadReservoirRightsFromHydroBase\Test_ReadReservoirRightsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadReservoirRightsFromHydroBase\Test_ReadReservoirRightsFromHydroBase_Rest.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadReservoirRightsFromStateMod\Test_ReadReservoirRightsFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadReservoirStationsFromList\Test_ReadReservoirStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadReservoirStationsFromNetwork\Test_ReadReservoirStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadReservoirStationsFromStateMod\Test_ReadReservoirStationsFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadResponseFromStateMod\Test_ReadResponseFromStateMod_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadRiverNetworkFromStateMod\Test_ReadRiverNetworkFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadStreamEstimateStationsFromList\Test_ReadStreamEstimateStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadStreamEstimateStationsFromNetwork\Test_ReadStreamEstimateStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadStreamEstimateStationsFromStateMod\Test_ReadStreamEstimateStationsFromStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadStreamGageStationsFromList\Test_ReadStreamGageStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadStreamGageStationsFromNetwork\Test_ReadStreamGageStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadStreamGageStationsFromNetwork\Test_ReadStreamGageStationsFromNetwork_IncludeStreamEstimateStations=True.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadStreamGageStationsFromStateMod\Test_ReadStreamGageStationsFromStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableCellsFromExcel\Test_ReadTableCellsFromExcel_IPP.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_Procedure_County.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_SqlFile_DivTotal_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_SqlFile_DivTotal_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_SqlFile_Property_DivTotal_ge2020720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_SqlFile_Property_DivTotal_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_Sql_DivTotal_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_Sql_Property_DivTotal_ge20200720.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_Sql_Property_DivTotal_le20160407.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDataStore\Test_ReadTableFromDataStore_HydroBase_Table_CropChar.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDBF\Test_ReadTableFromDBF.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDBF\Test_ReadTableFromDBF_2.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDBF\Test_ReadTableFromDBF_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromDBF\Test_ReadTableFromDBF_Top.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_Formulas_ColumnN.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_ColumnN.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_FirstRowInRange.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_FirstRowInRange_ExcludeBlank.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_FirstRowInRange_ExcludeMultiple.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_FirstRowInRange_IncludeMultiple.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_FirstRowInRange_NumberPrecision.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_FirstRowInRange_NumericHeadings.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_RowBeforeRange.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_ExcelAddress_NoFormulas_RowCountProperty.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_Worksheet_ColumnN.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_Worksheet_FirstRowInRange.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromExcel\Test_ReadTableFromExcel_Worksheet_FirstRowInRange_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadTableFromFixedFormatFile\Test_ReadTableFromFixedFormatFile_cm2009.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellDemandTSMonthlyFromStateMod\Test_ReadWellDemandTSMonthlyFromStateMod_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellHistoricalPumpingTSMonthlyFromStateCU\Test_ReadWellHistoricalPumpingTSMonthlyFromStateCU_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellHistoricalPumpingTSMonthlyFromStateMod\Test_ReadWellHistoricalPumpingTSMonthlyFromStateMod_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellRightsFromHydroBase\Test_ReadWellRightsFromHydroBase_rg2007part.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellRightsFromHydroBase\Test_ReadWellRightsFromHydroBase_rg2007part_WDID_Receipt.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellRightsFromStateMod\Test_ReadWellRightsFromStateMod_rg2007part.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellRightsFromStateMod\Test_ReadWellRightsFromStateMod_rg2007partNotMerged.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellStationsFromList\Test_ReadWellStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellStationsFromList\Test_ReadWellStationsFromList_Top.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellStationsFromNetwork\Test_ReadWellStationsFromNetwork.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\ReadWellStationsFromStateMod\Test_ReadWellStationsFromStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\RemoveCropPatternTS\Test_RemoveCropPatternTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\RunCommands\test-RunCommands-require-app-version-fail.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetBlaneyCriddle\Test_SetBlaneyCriddle.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetClimateStation\Test_SetClimateStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetClimateStation\Test_SetClimateStation_IfNotFound=Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetClimateStation\Test_SetClimateStation_withheights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCropCharacteristics\Test_SetCropCharacteristics.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCropPatternTS\Test_SetCropPatternTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCropPatternTS\Test_SetCropPatternTS_WithParcels_NoHB.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCropPatternTSFromList\Test_SetCropPatternTSFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCULocation\Test_SetCULocation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCULocation\Test_SetCULocationStation_IfNotFound=Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCULocationClimateStationWeights\Test_SetCULocationClimateStationWeights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCULocationClimateStationWeightsFromHydroBase\Test_SetCULocationClimateStationWeightsFromHydroBase.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCULocationClimateStationWeightsFromList\Test_SetCULocationClimateStationWeightsFromList_ID.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCULocationClimateStationWeightsFromList\Test_SetCULocationClimateStationWeightsFromList_Region1.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetCULocationsFromList\Test_SetCULocationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDebugLevel\Test_SetDebugLevel_LogLevel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDebugLevel\Test_SetDebugLevel_ScreenLevel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionAggregate\Test_SetDiversionAggregate_CULocations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionAggregate\Test_SetDiversionAggregate_Diversions.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionAggregateFromList\Test_SetDiversionAggregateFromList_CULocations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionAggregateFromList\Test_SetDiversionAggregateFromList_Diversions.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionDemandTSMonthly\Test_SetDiversionDemandTS_StateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionDemandTSMonthlyConstant\Test_SetDiversionDemandTSMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionHistoricalTSMonthly\Test_SetDiversionHistoricalTSMonthly_StateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionHistoricalTSMonthlyConstant\Test_SetDiversionHistoricalTSMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionMultiStruct\Test_SetDiversionMultiStruct.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionMultiStructFromList\Test_SetDiversionMultiStructFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionRight\Test_SetDiversionRight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionStation\Test_SetDiversionStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionStationCapacitiesFromTS\Test_SetDiversionStationCapacitiesFromTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionStationDelayTablesFromNetwork\Test_SetDiversionStationDelayTablesFromNetwork_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionStationDelayTablesFromRTN\Test_SetDiversionStationDelayTablesFromRTN_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionStationsFromList\Test_SetDiversionStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionSystem\Test_SetDiversionSystem_CULocations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionSystem\Test_SetDiversionSystem_Diversions.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionSystemFromList\Test_SetDiversionSystemFromList_CULocations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetDiversionSystemFromList\Test_SetDiversionSystemFromList_Diversions.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetExcelWorksheetViewProperties\Test_SetExcelWorksheetViewProperties_FreezePane.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetExcelWorksheetViewProperties\Test_SetExcelWorksheetViewProperties_FreezePane_ColumnOnly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetExcelWorksheetViewProperties\Test_SetExcelWorksheetViewProperties_FreezePane_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetExcelWorksheetViewProperties\Test_SetExcelWorksheetViewProperties_FreezePane_RowOnly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetExcelWorksheetViewProperties\Test_SetExcelWorksheetViewProperties_FreezePane_Worksheet.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetExcelWorksheetViewProperties\Test_SetExcelWorksheetViewProperties_FreezePane_Worksheets.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetExcelWorksheetViewProperties\Test_SetExcelWorksheetViewProperties_FreezePane_Worksheets_Wildcard.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetInstreamFlowDemandTSAverageMonthlyConstant\Test_SetInstreamFlowDemandTSAverageMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetInstreamFlowDemandTSAverageMonthlyConstant\Test_SetInstreamFlowDemandTSAverageMonthlyConstant_WaterYear.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetInstreamFlowDemandTSAverageMonthlyFromRights\Test_SetInstreamFlowDemandTSAverageMonthlyFromRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetInstreamFlowDemandTSAverageMonthlyFromRights\Test_SetInstreamFlowDemandTSAverageMonthlyFromRights_WaterYear.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetInstreamFlowRight\Test_SetInstreamFlowRight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetInstreamFlowStation\Test_SetInstreamFlowStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetIrrigationPracticeTS\Test_SetIrrigationPracticeTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetIrrigationPracticeTSFromList\Test_SetIrrigationPracticeTSFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetIrrigationPracticeTSPumpingMaxUsingWellRights\Test_SetIrrigationPracticeTSPumpingMaxUsingWellRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetIrrigationPracticeTSSprinklerAcreageFromList\Test_SetIrrigationPracticeTSSprinklerAcreageFromList_SetPeriod.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetIrrigationPracticeTSTotalAcreageToCropPatternTSTotalAcreage\Test_SetIrrigationPracticeTSTotalAcreageToCropPatternTSTotalAcreage.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetOutputPeriod\Test_SetOutputPeriod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetOutputYearType\Test_SetOutputYearType.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetPenmanMonteith\Test_SetPenmanMonteith.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetPlanStation\Test_SetPlanStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_DateTime.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_DateTime_CurrentToMinute.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_DateTime_CurrentToMinute_TimezoneBlank.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_DateTime_Math.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_Double.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_Double_Math.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_Integer.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_Integer_Math.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_RemoveProperty.StateDMI",ExpectedStatus=Failure,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_SpecialValues.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_String.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_String_Math.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetProperty\Test_SetProperty_String_Property.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetPropertyFromTable\Test_SetPropertyFromTable.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetPropertyFromTable\Test_SetPropertyFromTable_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetReservoirAggregate\Test_SetReservoirAggregate.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetReservoirAggregateFromList\Test_SetReservoirAggregateFromList_WellStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetReservoirRight\Test_SetReservoirRight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetReservoirStation\Test_SetReservoirStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetRiverNetworkNode\Test_SetRiverNetworkNode.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetStreamEstimateCoefficients\Test_SetStreamEstimateCoefficients.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetStreamEstimateCoefficientsPFGage\Test_SetStreamEstimateCoefficientsPFGage.StateDMI",ExpectedStatus=warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetStreamEstimateStation\Test_SetStreamEstimateStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetStreamGageStation\Test_SetStreamGageStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetTableValues\Test_SetTableValues.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetTableValues\Test_SetTableValues_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWarningLevel\Test_SetWarningLevel_LogLevel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWarningLevel\Test_SetWarningLevel_ScreenLevel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellAggregate\Test_SetWellAggregate_CULocations_Parcel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellAggregate\Test_SetWellAggregate_WellStations_Parcel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellAggregate\Test_SetWellAggregate_WellStations_WDID_Receipt.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellAggregateFromList\Test_SetWellAggregateFromList_CULocations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellAggregateFromList\Test_SetWellAggregateFromList_SP_WDID_Receipt.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellAggregateFromList\Test_SetWellAggregateFromList_WellStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellDemandTSMonthly\Test_SetWellDemandTS_StateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellDemandTSMonthlyConstant\Test_SetWellDemandTSMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellHistoricalPumpingTSMonthly\Test_SetWellHistoricalPumpingTSMonthly_StateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellHistoricalPumpingTSMonthlyConstant\Test_SetWellHistoricalPumpingTSMonthlyConstant.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellRight\Test_SetWellRight.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellStation\Test_SetWellStation.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellStationAreaToCropPatternTS\Test_SetWellStationAreaToCropPatternTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellStationCapacitiesFromTS\Test_SetWellStationCapacitiesFromTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellStationCapacityToWellRights\Test_SetWellStationCapacityToWellRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellStationDelayTablesFromNetwork\Test_SetWellStationDelayTablesFromNetwork_rg2007.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellStationDelayTablesFromRTN\Test_SetWellStationDelayTablesFromRTN_rg2007.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellStationDepletionTablesFromRTN\Test_SetWellStationDepletionTablesFromRTN_rg2007.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellStationsFromList\Test_SetWellStationsFromList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellSystem\Test_SetWellSystem_CULocations_Parcel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellSystem\Test_SetWellSystem_WellStations_Parcel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellSystem\Test_SetWellSystem_WellStations_WDID_Receipt.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellSystemFromList\Test_SetWellSystemFromList_CULocations_Parcel.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellSystemFromList\Test_SetWellSystemFromList_SP_WDID_Receipt.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SetWellSystemFromList\Test_SetWellSystemFromList_WellStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortBlaneyCriddle\Test_SortBlaneyCriddle.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortClimateStations\Test_SortClimateStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortCropCharacteristics\Test_SortCropCharacteristics.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortCropPatternTS\Test_SortCropPatternTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortCULocations\Test_SortCULocations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortDiversionDemandTSMonthly\Test_SortDiversionDemandTSMonthly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortDiversionHistoricalTSMonthly\Test_SortDiversionHistoricalTSMonthly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortDiversionRights\Test_SortDiversionRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortDiversionStations\Test_SortDiversionStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortInstreamFlowRights\Test_SortInstreamFlowRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortInstreamFlowStations\Test_SortInstreamFlowStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortIrrigationPracticeTS\Test_SortIrrigationPracticeTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortPenmanMonteith\Test_SortPenmanMonteith.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortReservoirRights\Test_SortReservoirRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortReservoirStations\Test_SortReservoirStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortStreamEstimateStations\Test_SortStreamEstimateStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortStreamGageStations\Test_SortStreamGageStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_DateTime.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_DateTime_Descending.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_Double.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_Double_Descending.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_Double_Then_Integer.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_Integer.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_Integer_Descending.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortTable\Test_SortTable_String_Descending.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortWellDemandTSMonthly\Test_SortDiversionDemandTSMonthly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortWellHistoricalPumpingTSMonthly\Test_SortWellHistoricalPumpingTSMonthly.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortWellRights\Test_SortWellRights.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SortWellStations\Test_SortWellStations.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitStateModReport\test-SplitStateModReport-xdd.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitStateModReport\test-SplitStateModReport-xre.statedmi",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableColumn\Test_SplitTableColumn_ColumnOrderUnique.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableColumn\Test_SplitTableColumn_ColumnOrderUniqueSorted.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableColumn\Test_SplitTableColumn_DeleteOriginal.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableColumn\Test_SplitTableColumn_InsertBeforeColumn.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableColumn\Test_SplitTableColumn_SpecifiedOutputColumns.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableRow\Test_SplitTableRow_Measure.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableRow\Test_SplitTableRow_Measure_DeleteOriginalRow.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableRow\Test_SplitTableRow_Measure_DeleteOriginalRow_MinimumLength.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableRow\Test_SplitTableRow_Tuple_YearTo1Tuple_DeleteOriginalRow.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableRow\Test_SplitTableRow_Tuple_YearTo1Tuple_DeleteOriginalRow_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\SplitTableRow\Test_SplitTableRow_Tuple_YearTo1Tuple_NoDeleteOriginalRow.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_ColumnAndConstant_Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_ColumnAndConstant_Divide.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_ColumnAndConstant_Multiply.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_ColumnAndConstant_Subtract.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_Columns_Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_Columns_Add_NonValue=NaN.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_Columns_Add_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_Columns_Divide.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_Columns_Multiply.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_Columns_Subtract.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_DoubleColumn_IntegerColumn_Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_DoubleColumn_IntegerColumn_Divide.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_DoubleColumn_IntegerColumn_Multiply.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_DoubleColumn_IntegerColumn_Subtract.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_DoubleColumn_IntegerConstant_Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_DoubleColumn_IntegerConstant_Divide.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_DoubleColumn_IntegerConstant_Multiply.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_DoubleColumn_IntegerConstant_Subtract.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_DoubleColumn_Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_DoubleColumn_Divide.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_DoubleColumn_Multiply.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_DoubleColumn_Subtract.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_DoubleConstant_Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_DoubleConstant_Divide.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_DoubleConstant_Multiply.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_DoubleConstant_Subtract.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_IntegerColumn_Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_IntegerColumn_Divide.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_IntegerColumn_Multiply.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_IntegerColumn_Subtract.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_IntegerConstant_Add.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_IntegerConstant_Divide.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_IntegerConstant_Multiply.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TableMath\Test_TableMath_IntegerColumn_IntegerConstant_Subtract.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TranslateBlaneyCriddle\Test_TranslateBlaneyCriddle.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TranslateCropCharacteristics\Test_TranslateCropCharacteristics.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TranslateCropPatternTS\Test_TranslateCropPatternTS.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TranslateCropPatternTS\Test_TranslateCropPatternTS_ListFile.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\TranslatePenmanMonteith\Test_TranslatePenmanMonteith.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\UnzipFile\Test_UnzipFile_File_to_Folder.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\UnzipFile\Test_UnzipFile_File_to_Folder_Gzip.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\UnzipFile\Test_UnzipFile_Folder_to_Folder.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WebGet\Test_WebGet_License.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WebGet\Test_WebGet_License_Property.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteBlaneyCriddleToList\Test_WriteBlaneyCriddleToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteBlaneyCriddleToStateCU\Test_WriteBlaneyCriddleToStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCheckFile\Test_WriteCheckFile.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteClimateStationsToList\Test_WriteClimateStationsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteClimateStationsToStateCU\Test_WriteClimateStationsToStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteControlToStateMod\Test_WriteControlToStateMod_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCropCharacteristicsToList\Test_WriteCropCharacteristicsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCropCharacteristicsToStateCU\Test_WriteCropCharacteristicsToStateCU_rg2007.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCropPatternTSToDateValue\Test_WriteCropPatternTSToDateValue.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCropPatternTSToStateCU\Test_WriteCropPatternTSToStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCropPatternTSToStateCU\Test_WriteCropPatternTSToStateCU_lt5.00.00.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCropPatternTSToStateCU\Test_WriteCropPatternTSToStateCU_Version=10.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCULocationsToList\Test_WriteCULocationsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteCULocationsToStateCU\Test_WriteCULocationsToStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDelayTablesDailyToList\Test_WriteDelayTablesDailyToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDelayTablesDailyToList\Test_WriteDelayTablesDailyToList_Legacy.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDelayTablesDailyToStateMod\Test_WriteDelayTablesDailyToStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDelayTablesDailyToStateMod\Test_WriteDelayTablesDailyToStateMod_Legacy.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDelayTablesMonthlyToList\Test_WriteDelayTablesMonthlyToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDelayTablesMonthlyToList\Test_WriteDelayTablesMonthlyToList_Legacy.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDelayTablesMonthlyToStateMod\Test_WriteDelayTablesMonthlyToStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDelayTablesMonthlyToStateMod\Test_WriteDelayTablesMonthlyToStateMod_Legacy.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDiversionDemandTSMonthlyToStateMod\Test_WriteDiversionDemandTSMonthlyToStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDiversionHistoricalTSMonthlyToStateMod\Test_WriteDiversionHistoricalTSMonthlyToStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDiversionRightsToList\Test_WriteDiversionRightsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDiversionRightsToStateMod\Test_ReadDiversionRightsFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDiversionStationsToList\Test_WriteDiversionStationsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteDiversionStationsToStateMod\Test_WriteDiversionStationsToStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteInstreamFlowDemandTSAverageMonthlyToStateMod\Test_WriteInstreamFlowDemandTSAverageMonthlyToStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteInstreamFlowDemandTSAverageMonthlyToStateMod\Test_WriteInstreamFlowDemandTSAverageMonthlyToStateMod_WaterYear.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteInstreamFlowRightsToList\Test_WriteInstreamFlowRightsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteInstreamFlowRightsToStateMod\Test_WriteInstreamFlowRightsToStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteInstreamFlowStationsToList\Test_WriteInstreamFlowStationsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteInstreamFlowStationsToStateMod\Test_ReadInstreamFlowStationsFromStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteIrrigationPracticeTSToStateCU\Test_WriteIrrigationPracticeTSToStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteNetworkToStateMod\Test_WriteNetworkToStateMod_cm2005.StateDMI",ExpectedStatus=Warning,IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePenmanMonteithToList\Test_WritePenmanMonteithToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePenmanMonteithToStateCU\Test_WritePenmanMonteithToStateCU.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePlanReturnToStateMod\Test_WritePlanReturnToStateMod_sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePlanStationsToStateMod\Test_WritePlanStationsToStateMod_sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePlanWellAugmentationToStateMod\Test_WritePlanWellAugmentationToStateMod_sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePropertiesToFile\Test_WritePropertiesToFile_OutputPeriod_Append.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePropertiesToFile\Test_WritePropertiesToFile_OutputPeriod_Append_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePropertiesToFile\Test_WritePropertiesToFile_OutputPeriod_NameTypeValue.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePropertiesToFile\Test_WritePropertiesToFile_OutputPeriod_NameTypeValuePython.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePropertiesToFile\Test_WritePropertiesToFile_OutputPeriod_NameValue.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePropertiesToFile\Test_WritePropertiesToFile_UserProps_NameTypeValue.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePropertiesToFile\Test_WritePropertiesToFile_UserProps_NameTypeValue_Ascending.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WritePropertiesToFile\Test_WritePropertiesToFile_UserProps_NameTypeValue_Descending.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteReservoirReturnToStateMod\Test_WriteReservoirReturnToStateMod_sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteReservoirRightsToList\Test_WriteReservoirRightsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteReservoirRightsToStateMod\Test_WriteReservoirRightsToStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteReservoirStationsToList\Test_WriteReservoirStationsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteReservoirStationsToStateMod\Test_WriteReservoirStationsToStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteResponseToStateMod\Test_WriteResponseToStateMod_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteRiverNetworkToList\Test_WriteRiverNetworkToList_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteRiverNetworkToStateMod\Test_WriteRiverNetworkToStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteStreamEstimateCoefficientsToStateMod\Test_WriteStreamEstimateCoefficientsToStateMod_cm2005.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteStreamEstimateStationsToList\Test_WriteStreamEstimateStationsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteStreamEstimateStationsToStateMod\Test_WriteStreamEstimateStationsToStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteStreamGageStationsToList\Test_WriteStreamGageStationsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteStreamGageStationsToStateMod\Test_WriteStreamGageStationsToStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToDelimitedFile\Test_WriteTableToDelimitedFile_AlwaysQuoteStrings.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToDelimitedFile\Test_WriteTableToDelimitedFile_GoogleBigQuerySchema.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToDelimitedFile\Test_WriteTableToDelimitedFile_JSONTableSchema.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToDelimitedFile\Test_WriteTableToDelimitedFile_NoHeaderComments.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToDelimitedFile\Test_WriteTableToDelimitedFile_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToDelimitedFile\Test_WriteTableToDelimitedFile_WithHeaders.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToDelimitedFile\Test_WriteTableToDelimitedFile_WithHeaders_EscapeQuotes.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToDelimitedFile\Test_WriteTableToDelimitedFile_WithHeaders_NaN.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToExcel\Test_WriteTableToExcel_Address.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToExcel\Test_WriteTableToExcel_Address_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToExcel\Test_WriteTableToExcel_Address_StyleFormat.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToExcel\Test_WriteTableToExcel_Address_StyleFormat_ColorScale.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToExcel\Test_WriteTableToExcel_Address_StyleFormat_Strings.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToExcel\Test_WriteTableToExcel_Address_Width.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToGeoJSON\Test_WriteTableToGeoJSON_LonLat.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToGeoJSON\Test_WriteTableToGeoJSON_LonLat_CRSText.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToGeoJSON\Test_WriteTableToGeoJSON_LonLat_JavaScriptVar.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToGeoJSON\Test_WriteTableToGeoJSON_LonLat_PrependText.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToGeoJSON\Test_WriteTableToGeoJSON_LonLat_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToGeoJSON\Test_WriteTableToGeoJSON_WKTPoint.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToGeoJSON\Test_WriteTableToGeoJSON_WKTPolygon.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToHTML\Test_WriteTableToHTML.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToHTML\Test_WriteTableToHTML_Properties.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToShapefile\Test_WriteTableToShapefile_LonLat.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToShapefile\Test_WriteTableToShapefile_WKTPoint.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteTableToShapefile\Test_WriteTableToShapefile_WKTPolygon.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteWellDemandTSMonthlyToStateMod\Test_WriteWellDemandTSMonthlyToStateMod_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteWellHistoricalPumpingTSMonthlyToStateMod\Test_ReadWellHistoricalPumpingTSMonthlyFromStateMod_Sp2008L.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteWellRightsToList\Test_WriteWellRightsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteWellRightsToStateMod\Test_WriteWellRightsToStateMod.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteWellStationsToList\Test_WriteWellStationsToList.StateDMI",IfRequirementsNotMet=Ignore)
RunCommands(InputFile="..\..\..\commands\WriteWellStationsToStateMod\Test_WriteWellStationsToStateMod.StateDMI",IfRequirementsNotMet=Ignore)
